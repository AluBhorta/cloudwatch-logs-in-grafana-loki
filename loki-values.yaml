loki:
  auth_enabled: false
  commonConfig:
    path_prefix: /var/loki
    replication_factor: 1
  limits_config:
    enforce_metric_name: false
    reject_old_samples: false
    # reject_old_samples_max_age: 8760h # 1 year
    max_cache_freshness_per_query: 1m
    split_queries_by_interval: 30m
  rulerConfig:
    storage:
      local:
        directory: /var/loki/rules
      type: local
  schema_config:
    configs:
      - from: "2022-01-11"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v12
        store: boltdb-shipper
  storage:
    type: s3
    bucketNames:
      chunks: loki-storage-eks-demo #bucket name
      ruler: loki-storage-eks-demo
      admin: loki-storage-eks-demo
    s3:
      # bucketnames: loki-storage-eks-demo
      region: ap-south-1 #NOTE
      insecure: false
      s3forcepathstyle: true
  storage_config:
    boltdb_shipper:
      active_index_directory: /var/loki/index
      shared_store: s3
monitoring:
  alerts:
    enabled: false
  dashboards:
    enabled: false
  rules:
    enabled: false
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false
  lokiCanary:
    enabled: false
  serviceMonitor:
    enabled: false
test:
  enabled: false
read:
  replicas: 1
backend:
  replicas: 1
  persistence:
    enableStatefulSetAutoDeletePVC: true
    size: 4Gi
write:
  replicas: 1
  terminationGracePeriodSeconds: 60
  persistence:
    enableStatefulSetAutoDeletePVC: true
    size: 4Gi
gateway:
  replicas: 1
  service:
    type: ClusterIP # LoadBalancer
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::900142166256:role/LokiStorage-role
  create: true
  name: loki #note, this takes effect on the oidc trust condition
